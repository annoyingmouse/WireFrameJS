import { Clock } from "./Clock.js"

export class Numeral {

  constructor(p5, x, y, unitWidth = 30, degreeMuliplier = 5) {
    this.num = 9
    this.p5 = p5
    this.x = x
    this.y = y
    this.unitWidth = unitWidth
    this.degreeMuliplier = degreeMuliplier
    this.Clocks = []
    this.addClocks()
    this.Numbers = [
      [
        [2,4],[2,6],[2,6],[2,6],[4,6],
        [0,4],[2,4],[2,6],[4,6],[0,4],
        [0,4],[0,4],[5,5],[0,4],[0,4],
        [0,4],[0,4],[5,5],[0,4],[0,4],
        [0,4],[0,2],[2,6],[0,6],[0,4],
        [0,2],[2,6],[2,6],[2,6],[0,6]
      ],[
        [5,5],[5,5],[5,5],[2,4],[4,6],
        [5,5],[5,5],[5,5],[0,4],[0,4],
        [5,5],[5,5],[5,5],[0,4],[0,4],
        [5,5],[5,5],[5,5],[0,4],[0,4],
        [5,5],[5,5],[5,5],[0,4],[0,4],
        [5,5],[5,5],[5,5],[0,2],[0,6],
      ],[
        [2,4],[2,6],[2,6],[2,6],[4,6],
        [0,2],[2,6],[2,6],[4,6],[0,4],
        [2,4],[2,6],[2,6],[0,6],[0,4],
        [0,4],[2,4],[2,6],[2,6],[0,6],
        [0,4],[0,2],[2,6],[2,6],[4,6],
        [0,2],[2,6],[2,6],[2,6],[0,6],
      ],[
        [2,4],[2,6],[2,6],[2,6],[4,6],
        [0,2],[2,6],[2,6],[4,6],[0,4],
        [2,4],[2,6],[2,6],[0,6],[0,4],
        [0,2],[2,6],[2,6],[4,6],[0,4],
        [2,4],[2,6],[2,6],[0,6],[0,4],
        [0,2],[2,6],[2,6],[2,6],[0,6],
      ],
      [
        [2,4],[4,6],[5,5],[2,4],[4,6],
        [0,4],[0,4],[5,5],[0,4],[0,4],
        [0,4],[0,2],[2,6],[0,6],[0,4],
        [0,2],[2,6],[2,6],[4,6],[0,4],
        [5,5],[5,5],[5,5],[0,4],[0,4],
        [5,5],[5,5],[5,5],[0,2],[0,6],
      ],
      [
        [2,4],[2,6],[2,6],[2,6],[4,6],
        [0,4],[2,4],[2,6],[2,6],[0,6],
        [0,4],[0,2],[2,6],[2,6],[4,6],
        [0,2],[2,6],[2,6],[4,6],[0,4],
        [2,4],[2,6],[2,6],[0,6],[0,4],
        [0,2],[2,6],[2,6],[2,6],[0,6],
      ],
      [
        [2,4],[2,6],[2,6],[2,6],[4,6],
        [0,4],[2,4],[2,6],[2,6],[0,6],
        [0,4],[0,2],[2,6],[2,6],[4,6],
        [0,4],[2,4],[2,6],[4,6],[0,4],
        [0,4],[0,2],[2,6],[0,6],[0,4],
        [0,2],[2,6],[2,6],[2,6],[0,6],
      ],
      [
        [2,4],[2,6],[2,6],[2,6],[4,6],
        [0,2],[2,6],[2,6],[4,6],[0,4],
        [5,5],[5,5],[5,5],[0,4],[0,4],
        [5,5],[5,5],[5,5],[0,4],[0,4],
        [5,5],[5,5],[5,5],[0,4],[0,4],
        [5,5],[5,5],[5,5],[0,2],[0,6],
      ],
      [
        [2,4],[2,6],[2,6],[2,6],[4,6],
        [0,4],[2,4],[2,6],[4,6],[0,4],
        [0,4],[0,2],[2,6],[0,6],[0,4],
        [0,4],[2,4],[2,6],[4,6],[0,4],
        [0,4],[0,2],[2,6],[0,6],[0,4],
        [0,2],[2,6],[2,6],[2,6],[0,6],
      ],
      [
        [2,4],[2,6],[2,6],[2,6],[4,6],
        [0,4],[2,4],[2,6],[4,6],[0,4],
        [0,4],[0,2],[2,6],[0,6],[0,4],
        [0,2],[2,6],[2,6],[4,6],[0,4],
        [2,4],[2,6],[2,6],[0,6],[0,4],
        [0,2],[2,6],[2,6],[2,6],[0,6],
      ]
    ]
  }

  addClocks() {
    for(let y = 0; y < 6; y++) {
      for(let x = 0; x < 5; x++) {
        this.Clocks.push(
            new Clock(
                this.p5,
                this.x + (this.unitWidth * (x * 1)),
                this.y + (this.unitWidth * (y * 1)),
                this.unitWidth,
                this.degreeMuliplier
            )
        )
      }
    }
  }

  draw(){
    this.Clocks.forEach((c, i) => this.p5.image(c.update(...this.Numbers[this.num][i].map(e => e * this.degreeMuliplier)), c.x, c.y))
  }
}